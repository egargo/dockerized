services:
    keycloak:
        image: quay.io/keycloak/keycloak
        container_name: egargo.keycloak
        restart: always
        environment:
            KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
            KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
        command: start-dev
        ports:
            - 8080:8080
        volumes:
            -  egargo-keycloak-data:/opt/jboss/keycloak/standalone/data/

    mysql:
        image: mysql
        container_name: egargo.mysql
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            TZ: Asia/Manila
        ports:
            - 3306:3306
        volumes:
            - egargo-mysql-data:/var/lib/mysql

    mysql5:
        image: mysql:5
        container_name: egargo.mysql5
        # restart: always
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            TZ: Asia/Manila
        ports:
            - 3303:3306
        expose:
            - 3303
        volumes:
            - egargo-mysql5-data:/var/lib/mysql

    postgres:
        image: postgres
        container_name: egargo.postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        command: postgres -c 'max_connections=1000'
        ports:
            - 5432:5432
        volumes:
            - egargo-postgres-data:/var/lib/postgresql

    redis:
        image: redis
        container_name: egargo.redis
        restart: always
        environment:
            REDIS_PASSWORD: ${REDIS_PASSWORD}
            REDIS_PORT: 6379
            REDIS_DATABASES: 16
        ports:
            - 6379:6379
        volumes:
            - egargo-redis-data:/root/redis

    # kafka:
    #     image: apache/kafka
    #     container_name: egargo.kafka
    #     environment:
    #         KAFKA_NODE_ID: 1
    #         KAFKA_ADVERTISED_PORT: 9092
    #         KAFKA_PROCESS_ROLES: broker,controller
    #         # KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
    #         KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
    #         KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    #         KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
    #         KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
    #         KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
    #         KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    #         KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    #         KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    #         KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    #         KAFKA_NUM_PARTITIONS: 3
    #     ports:
    #         - 9092:9092
    #     volumes:
    #         - egargo-kafka-data:/var/lib/kafka

    # adminer:
    #     image: adminer
    #     container_name: egargo.adminer
    #     restart: always
    #     environment:
    #         ADMINER_DESIGN: nette
    #     ports:
    #         - 8080:8080
    #     depends_on:
    #         - mysql
    #         - postgres

volumes:
    egargo-mysql-data:
    egargo-mysql5-data:
    egargo-postgres-data:
    egargo-redis-data:
    egargo-keycloak-data:
    # egarg-kafka-data:
